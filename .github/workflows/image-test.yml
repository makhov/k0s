name: Build Image

on:
  pull_request:
env:
  GO_VERSION: ^1.17
  GO_VERSION_WIN: ^1.13

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.branch_name.outputs.TAG_NAME }}
      image_tag: ${{ steps.image_tag.outputs.IMAGE_TAGS }}
    steps:
      # Ugly hack to get the tag name
      # github.ref gives the full reference like refs.tags.v0.0.1-beta1
      - name: Branch name
        id: branch_name
        run: |
          ASD="v1.22.5+k0s.0"
          echo ::set-output name=TAG_NAME::$ASD
      - name: Prepare image tags
        id: image_tag
        # Basically just replace the '+' with '-' as '+' is not allowed in tags
        run: |
          TAGS=${{ steps.branch_name.outputs.TAG_NAME }}
          TAGS=${TAGS//+/-}
          echo ::set-output name=IMAGE_TAGS::${TAGS}

  x64:
    needs: release
    runs-on: [self-hosted,linux,x64]
    env:
      SEGMENT_TOKEN: ${{ secrets.SEGMENT_WRITE_KEY_PROD }}
      EULA_NOTICE: ${{ secrets.EULA_NOTICE }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Build
        run: make EMBEDDED_BINS_BUILDMODE=docker
        env:
          VERSION: ${{ needs.release.outputs.tag_name }}
      - name: Clean Docker
        run: |
          docker system prune --all --volumes --force

      - name: Upload Artifact for use in other Jobs
        uses: actions/upload-artifact@v2
        with:
          name: k0s-amd64
          path: ./k0s

  arm64:
    needs: release
    runs-on: [self-hosted,linux,arm64]
    env:
      SEGMENT_TOKEN: ${{ secrets.SEGMENT_WRITE_KEY_PROD }}
      EULA_NOTICE: ${{ secrets.EULA_NOTICE }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Build
        run: make EMBEDDED_BINS_BUILDMODE=docker
        env:
          VERSION: ${{ needs.release.outputs.tag_name }}
      - name: Clean Docker
        run: |
          docker system prune --all --volumes --force


      - name: Upload Artifact for use in other Jobs
        uses: actions/upload-artifact@v2
        with:
          name: k0s-arm64
          path: ./k0s



  armv7:
    needs: release
    runs-on: [self-hosted,linux,arm]
    env:
      SEGMENT_TOKEN: ${{ secrets.SEGMENT_WRITE_KEY_PROD }}
      EULA_NOTICE: ${{ secrets.EULA_NOTICE }}
    steps:
      - name: Install GoLang for ARMHF
        run: "echo $HOME/.local/go/bin >> $GITHUB_PATH; rm -rf $HOME/.local/go && mkdir -p $HOME/.local/go && curl --silent -L https://golang.org/dl/$(curl --silent -L 'https://golang.org/VERSION?m=text').linux-armv6l.tar.gz | tar -C $HOME/.local -xz"
      - name: Go Version
        run: go version

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make EMBEDDED_BINS_BUILDMODE=docker
        env:
          VERSION: ${{ needs.release.outputs.tag_name }}

      - name: Upload Artifact for use in other Jobs
        uses: actions/upload-artifact@v2
        with:
          name: k0s-arm
          path: ./k0s



  build-image:
    needs:
      - release
      - x64
      - arm64
      - armv7
    runs-on: [self-hosted,linux,x64]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Fetch k0s amd64
        uses: actions/download-artifact@v2
        with:
          name: k0s-amd64
      - name: Fetch k0s arm64
        uses: actions/download-artifact@v2
        with:
          name: k0s-arm64
      - name: Fetch k0s arm
        uses: actions/download-artifact@v2
        with:
          name: k0s-arm

      - name: Build image and push to Docker Hub and GitHub image registry
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            ghcr.io/k0sproject/k0s:${{ needs.release.outputs.image_tag }}
            docker.io/k0sproject/k0s:${{ needs.release.outputs.image_tag }}
          push: true

      # Need to remove this from maintenance branches
      # Done as separate step for better control when we push latest
      - name: Build image and push to Docker hub
        if: "!contains(github.ref, '-')"
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: docker.io/k0sproject/k0s:latest
          push: true
